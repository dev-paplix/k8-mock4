apiVersion: v1
kind: ConfigMap
metadata:
  name: config-mongo-express 
  namespace: qq3
data:
  ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  ME_CONFIG_BASICAUTH: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-mongo 
  namespace: qq3
data:
  MONGO_INITDB_ROOT_USERNAME: YWRtaW4K
  MONGO_INITDB_ROOT_PASSWORD: YWRtaW4K
  ME_CONFIG_MONGODB_ADMINUSERNAME: YWRtaW4K
  ME_CONFIG_MONGODB_ADMINPASSWORD: YWRtaW4K
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo 
  namespace: qq3  
spec:
  selector:
    matchLabels:
      app: mongo # has to match .spec.template.metadata.labels
  # serviceName: "nginx"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongo # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo 
        image: mongo 
        ports:
        - containerPort: 80
          name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: MONGO_INITDB_ROOT_PASSWORD
        volumeMounts:
        - name: mongo 
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "mongo-class"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-express
  namespace: qq3
spec:
  selector:
    matchLabels:
      app: mongo-express # has to match .spec.template.metadata.labels
  # serviceName: "nginx"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongo-express # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo-express
        image: mongo-express
        ports:
        - containerPort: 80
          name: mongo-express
        env:
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: config-mongo-express
              key: ME_CONFIG_MONGODB_URL
        - name: ME_CONFIG_BASICAUTH
          valueFrom:
            configMapKeyRef:
              name: config-mongo-express
              key: ME_CONFIG_BASICAUTH
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: ME_CONFIG_MONGODB_ADMINUSERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: ME_CONFIG_MONGODB_ADMINPASSWORD
        volumeMounts:
        - name: mongo-express 
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-express 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "mongo-class"
      resources:
        requests:
          storage: 1Gi